
##Common variables (just complete server(list separate by ","), ag and fqdn values)
###############################################################################################
##Alter only these values:
[String[][]]$Server = @("Prefix-v-sql1-1p01","Prefix-v-sql1-2p01")
[String]$Ag = "Prefix-ag-sql1-p"
[String]$fqdn = "ad.stone.com.br"
[String]$Instance = "SQL2019"
[String]$TcpHostPort = "31433"
[String]$TcpAgPort = "31435"

###############################################################################################
[String]$AgFQDN = "$Ag.$fqdn\$Instance"
$registryPath = 'HKLM:\SOFTWARE\Microsoft\MSSQLServer\Client\ConnectTo'
$registryPathWow6432Node = 'HKLM:\SOFTWARE\Wow6432Node\Microsoft\MSSQLServer\Client\ConnectTo'
###############################################################################################
Function Test-RegistryValue {
    param(
        [Alias("PSPath")]
        [Parameter(Position = 0, Mandatory = $true, ValueFromPipeline = $true, ValueFromPipelineByPropertyName = $true)]
        [String]$Path
        ,
		[Alias("Value")]
        [Parameter(Position = 1, Mandatory = $true)]
        [String]$Name
        ,
        [Switch]$PassThru
    ) 

    process {
        if (Test-Path $Path) {
            $Key = Get-Item -LiteralPath $Path
            if ($Key.GetValue($Name, $null) -ne $null) {
                if ($PassThru) {
                    Get-ItemProperty $Path $Name
                } else {
                    $true
                }
            } else {
                $false
            }
        } else {
            $false
        }
    }
}

###############################################################################################

if (-NOT (Test-path $registryPath)){
    New-Item $registryPath 
}

if (-NOT (Test-path $registryPathWow6432Node)){
    New-Item $registryPathWow6432Node 
}

Get-ItemProperty -Path $registryPath
Get-ItemProperty -Path $registryPathWow6432Node

## Create Server Alias
foreach ($i in $Server){
    [String]$Name = $i
    [String]$ServerName =  "$i\$Instance" 
    [String]$InstanceFQDNName = "$i.$fqdn\$Instance" 
    
    $ItemValue = "DBMSSOCN,$Name,$TcpHostPort"
	
    if (-NOT (Test-RegistryValue -Path $registryPath -Value $name)){
        Set-ItemProperty -Path $registryPath -Name $Name -Value $ItemValue 
    } 
	if (-NOT (Test-RegistryValue -Path $registryPathWow6432Node -Value $name)){
        Set-ItemProperty -Path $registryPathWow6432Node -Name $Name -Value $ItemValue
    } 

	if (-NOT (Test-RegistryValue -Path $registryPath -Value $ServerName)){
        Set-ItemProperty -Path $registryPath -Name $ServerName -Value $ItemValue 
    }
	if (-NOT (Test-RegistryValue -Path $registryPathWow6432Node -Value $ServerName)){
        Set-ItemProperty -Path $registryPathWow6432Node -Name $ServerName -Value $ItemValue
    }

	if (-NOT (Test-RegistryValue -Path $registryPath -Value $InstanceFQDNName)){
        Set-ItemProperty -Path $registryPath -Name $InstanceFQDNName -Value $ItemValue 
    }
	if (-NOT (Test-RegistryValue -Path $registryPathWow6432Node -Value $InstanceFQDNName)){
        Set-ItemProperty -Path $registryPathWow6432Node -Name $InstanceFQDNName -Value $ItemValue
    }

	if (-NOT (Test-RegistryValue -Path $registryPath -Value $AgFQDN)){
        $AgItemValue = "DBMSSOCN,$Ag,$TcpAgPort"
        Set-ItemProperty -Path $registryPath -Name $AgFQDN -Value $AgItemValue 
    }
	if (-NOT (Test-RegistryValue -Path $registryPathWow6432Node -Value $AgFQDN)){
        $AgItemValue = "DBMSSOCN,$Ag,$TcpAgPort"
        Set-ItemProperty -Path $registryPathWow6432Node -Name $AgFQDN -Value $AgItemValue
    }

	if (-NOT (Test-RegistryValue -Path $registryPath -Value $Ag)){
        $AgItemValue = "DBMSSOCN,$Ag,$TcpAgPort"
        Set-ItemProperty -Path $registryPath -Name $Ag -Value $AgItemValue 
    }
	if (-NOT (Test-RegistryValue -Path $registryPathWow6432Node -Value $Ag)){
        $AgItemValue = "DBMSSOCN,$Ag,$TcpAgPort"
        Set-ItemProperty -Path $registryPathWow6432Node -Name $Ag -Value $AgItemValue
    }
}

#Check all Aliases
Get-Item $registryPath
Get-Item $registryPathWow6432Node
